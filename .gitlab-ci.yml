stages:
  - github-sync
  - build
  - test

push_to_github:
    stage: github-sync
    variables:
        GIT_STRATEGY: none
    tags:
        - redshift
    script:
        - rm -rf ./*
        - rm -rf .git
        - git clone --mirror $CI_REPOSITORY_URL .
        - git remote add github $GITHUB_URL_AND_KEY
        - git config --global user.email "contact@duniter.org"
        - git config --global user.name "Duniter"
        # Job would fail if we don't remove refs about pull requests
        - bash -c "cat packed-refs | grep -v 'refs/pull' > packed-refs-new; echo 'Removed pull refs.'"
        - mv packed-refs-new packed-refs
        - bash -c "git push --force --mirror github 2>&1 | grep -v duniter-gitlab; echo $?"

enforce_readme:
    stage: github-sync
    variables:
        GIT_STRATEGY: none
    tags:
        - redshift
    script:
      - rm -rf ./*
      - rm -rf .git
      - git clone $GITHUB_URL_AND_KEY .
      - git config --global user.email "contact@duniter.org"
      - git config --global user.name "Duniter"
      - git checkout master
      - cat .github/github_disclaimer.md > README.md.new
      - cat README.md >> README.md.new
      - mv README.md.new README.md
      - git commit -am "Enforce github readme"
      - git push origin master

build_linux:test:
  stage: build
  image: duniter/release-builder:v1.0.0
  tags:
    - nodejs
    - nwjs
  script:
    - bash "release/arch/linux/build-lin.sh" "$(date +%Y%m%d).$(date +%H%M).$(date +%S)"
  artifacts:
    paths:
      - work/bin/
    expire_in: 8h
  except:
    - tags

build_linux:deploy:
  stage: build
  image: duniter/release-builder:v1.0.0
  tags:
    - nodejs
    - nwjs
  script:
    - bash "release/arch/linux/build-lin.sh" "${CI_COMMIT_TAG#v}"
  artifacts:
    paths:
      - work/bin/
  only:
    - tags

test:
  stage: test
  tags:
    - redshift
  before_script:
    - export NVM_DIR="$HOME/.nvm"
    - . "$NVM_DIR/nvm.sh"
  script:
    - yarn
    - yarn test
